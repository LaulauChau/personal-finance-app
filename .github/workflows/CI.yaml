name: CI

on:
  pull_request:
    branches:
      - dev
      - master
    paths-ignore:
      - '.github/**'
      - '**.md'
    types: [opened, reopened, synchronize]
  push:
    branches:
      - dev
      - master
    paths-ignore:
      - '.github/**'
      - '**.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependencies:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [22.11.0]
        pnpm-version: [9.15.0]

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ~/.pnpm-store
            node_modules
          restore-keys: |
            ${{ runner.os }}-pnpm-

  type-check:
    needs: dependencies
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [22.11.0]
        pnpm-version: [9.15.0]

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ~/.pnpm-store
            node_modules

      - name: Type checking
        run: pnpm run typecheck

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Type check failed! Please check the logs.'
            })

  lint:
    needs: dependencies
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [22.11.0]
        pnpm-version: [9.15.0]

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ~/.pnpm-store
            node_modules

      - name: Linting
        run: pnpm run lint

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Lint failed! Please check the logs.'
            })

  build:
    needs: [type-check, lint]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: [22.11.0]
        pnpm-version: [9.15.0]

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}

      - name: Restore dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ~/.pnpm-store
            node_modules

      - name: Build
        run: SKIP_ENV_VALIDATION=true pnpm run build

      - name: Create status artifact
        if: success()
        run: echo "CI passed" > ci_status.txt

      - name: Upload status artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ci-status
          path: ci_status.txt

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ CI failed! Please check the logs.'
            })
